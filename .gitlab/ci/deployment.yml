include:
  - project: 'templates/ci-templates'
    ref: master
    file: '/Git/ufit.git.rules.latest.yml'
  - project: 'templates/ci-templates'
    ref: master
    file: '/Terraform/ufit.terraform.rules.latest.yml'
  - project: 'templates/ci-templates'
    ref: master
    file: '/Documentation/ufit.tfdocs.rules.latest.yml'
  - project: 'templates/ci-templates'
    file: '/Documentation/ufit.onewiki.latest.yml'
  - project: 'templates/ci-templates'
    file: '/Release/semantic-release.latest.yml'
  - project: 'templates/ci-templates'
    file: '/Publish/ufit.publish.latest.yml'



stages:
  - Validate
  - Version
  - Documentation
  - Publish

# ----------------------------------- Lint ----------------------------------- #

Deployment Validate:
  stage: Validate
  extends:
    - .git:config
    - .terraform:validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS  # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH

# ---------------------------------- Version --------------------------------- #

Deployment Semantic Version:
  stage: Version
  extends: .release:get-semantic-version
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_OPEN_MERGE_REQUESTS  # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# --------------------------- Create Documentation --------------------------- #

Deployment Create Documentation:
  stage: Documentation
  extends:
    - .tfdocs:advanced
  variables:
    TFDOCS_OUTPUT_FILE: "README.md"
    TFDOCS_CONFIG_PATH: ${TFDOCS_CONFIG}
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_OPEN_MERGE_REQUESTS  # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# ---------------------- Version the module and project ---------------------- #

Deployment Version:
  stage: Publish
  extends:
    - .release:full
  artifacts:
    paths:
    - CHANGELOG.md
    - VERSION
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_OPEN_MERGE_REQUESTS  # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# ---------------------------- Publish the Module ---------------------------- #

Deployment Publish Module:
  stage: Publish
  extends:
    - .publish:terraform
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_OPEN_MERGE_REQUESTS  # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# --------------------------- Publish Documentation -------------------------- #

Deployment Publish Documentation:
  stage:  Publish
  before_script:
    - touch docs/${CI_PROJECT_NAME}.md
    - cp -rf README.md docs/${CI_PROJECT_NAME}.md
  extends: .onewiki:push
  variables:
    ONEWIKI_SPACE: ${SPACE}
    ONEWIKI_PARENT: ${PARENT}
    DOCUMENTATION_PATH: ${DOCS_PATH}
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_OPEN_MERGE_REQUESTS  # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
      when: never
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
